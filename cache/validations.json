{
  "version": "3.4",
  "log": [
    {
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "dc2a1be4d65848fd9c9896d36738cdaa876ceb17b689e54b8b6604c75fd09c02",
          "withoutMetadata": "fa9e7bee41922d0e0ed7beeeee8af0ca271ba5e59d5ebe6bc9cf8464ca7a8f0b",
          "linkedWithoutMetadata": "fa9e7bee41922d0e0ed7beeeee8af0ca271ba5e59d5ebe6bc9cf8464ca7a8f0b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)20",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)20": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "cee6378bbf831ae004525eee05e53b48a9e8b75fc3b6cc7bf9303ca9f587d185",
          "withoutMetadata": "5ee46c2face8aafb4311af3dcbfbcc7158a116ff4428d8537b28b4a0af5854c4",
          "linkedWithoutMetadata": "5ee46c2face8aafb4311af3dcbfbcc7158a116ff4428d8537b28b4a0af5854c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)20",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)20": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "026f2eb08f61b710ab524a746838606a710c7dd2da6d5890901554cc0f81247f",
          "withoutMetadata": "33b86d929cc6876714b0960b4cb81aa05fa5af7238200f329849c913b566dd07",
          "linkedWithoutMetadata": "33b86d929cc6876714b0960b4cb81aa05fa5af7238200f329849c913b566dd07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)20",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)20": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "29ebd5ccdec2f90131d9500bbfbf9a710514b1fc48c560a7353c9209cd37148a",
          "withoutMetadata": "45ece2b020a7c509238e1b7336bd26795cea44a2293feae8295f5ecb47687db7",
          "linkedWithoutMetadata": "45ece2b020a7c509238e1b7336bd26795cea44a2293feae8295f5ecb47687db7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)20",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)20": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "d8e208a42662e4244e0006b2fe8f1cba731c0a63ff608e26dafbcd6c132d8525",
          "withoutMetadata": "7bc0f032fd5bed5e70ea1d48929fe550341420383bb9ae6f9744d45be08cf427",
          "linkedWithoutMetadata": "7bc0f032fd5bed5e70ea1d48929fe550341420383bb9ae6f9744d45be08cf427"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)20",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)20": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "29ebd5ccdec2f90131d9500bbfbf9a710514b1fc48c560a7353c9209cd37148a",
          "withoutMetadata": "45ece2b020a7c509238e1b7336bd26795cea44a2293feae8295f5ecb47687db7",
          "linkedWithoutMetadata": "45ece2b020a7c509238e1b7336bd26795cea44a2293feae8295f5ecb47687db7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)20",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)20": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:CEX": {
        "src": "contracts\\CEX.sol:9",
        "version": {
          "withMetadata": "72d2bf7a145e0012148ac5a4e6e5074c183619c404e3ad12a4d1f04a4fcb35d3",
          "withoutMetadata": "992e2d0c94a075ebae5faa33734d4a0fe341c07b29420bec5e6abb0fba5b710f",
          "linkedWithoutMetadata": "992e2d0c94a075ebae5faa33734d4a0fe341c07b29420bec5e6abb0fba5b710f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CEX",
            "src": "contracts\\CEX.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:12"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INamToken)806",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:14"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CEX",
              "src": "contracts\\CEX.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(INamToken)806": {
              "label": "contract INamToken",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/CEX.sol:INamToken": {
        "src": "contracts\\CEX.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/NamToken.sol:NamToken": {
        "src": "contracts\\NamToken.sol:6",
        "version": {
          "withMetadata": "c91facd50c86b7464b9a43d5e5f775e0666691324172f2f02299baecc5973d3f",
          "withoutMetadata": "0465320b10603af34f84105abea19ebc0ed06ac6df80ac6148c9fa378adbd0c2",
          "linkedWithoutMetadata": "0465320b10603af34f84105abea19ebc0ed06ac6df80ac6148c9fa378adbd0c2"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NamToken",
            "src": "contracts\\NamToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/Group1.sol:Group1": {
        "src": "contracts\\Group1.sol:6",
        "version": {
          "withMetadata": "6c50358313cc4eb53ced54325996f2298094a17b58ab2b8aca8deb97b93c3328",
          "withoutMetadata": "e423151eb87ad1eee88d261c9be8460e4008788a27554e027eed94e53aed83e1",
          "linkedWithoutMetadata": "e423151eb87ad1eee88d261c9be8460e4008788a27554e027eed94e53aed83e1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Group1",
            "src": "contracts\\Group1.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/Lab3.sol:TuanNamToken": {
        "src": "contracts\\Lab3.sol:6",
        "version": {
          "withMetadata": "f5123af0ede8fbf00adf98ce7b8995f56599fc11b3d5a01e44764f78e28792e8",
          "withoutMetadata": "68319bc2d96c7bad448550982df912a2b302a5aa2aa843d8690cbd2b70108265",
          "linkedWithoutMetadata": "68319bc2d96c7bad448550982df912a2b302a5aa2aa843d8690cbd2b70108265"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getCurrentTokenPrice()",
          "buyToken()",
          "sellToken(uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TuanNamToken",
            "src": "contracts\\Lab3.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "deploymentTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TuanNamToken",
              "src": "contracts\\Lab3.sol:9"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TuanNamToken",
              "src": "contracts\\Lab3.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "b7af38d27db92303ac86222d5c83350230984a102c07f92d87e034f2c34a717c",
          "withoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd",
          "linkedWithoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)1068",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)1068": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/ICamelotRouter.sol:ICamelotRouter": {
        "src": "contracts\\interfaces\\ICamelotRouter.sol:5",
        "inherit": [
          "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01": {
        "src": "contracts\\interfaces\\IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/interfaces/IWETH.sol:IWETH": {
        "src": "contracts\\interfaces\\IWETH.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "21f86aab37f3738d7ce414cd6b01015c76b40b3391f87d4088efc9bfcca62456",
          "withoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd",
          "linkedWithoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)13",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)13": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "cafd80fc860438ecd486edd1267b86b3610cd3c5a7257f56c4fe2b2b50e5be57",
          "withoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd",
          "linkedWithoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)13",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)13": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "21f86aab37f3738d7ce414cd6b01015c76b40b3391f87d4088efc9bfcca62456",
          "withoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd",
          "linkedWithoutMetadata": "1ea006495b0fb0e60fd33b11e65116158d03eb2539f225ca37b6f56689c93bcd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)13",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)13": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "8d0a6435e9558738727fbfa80d4dbc4a65ec082a709727a79136dc1bcad0d017",
          "withoutMetadata": "43e206a7da14e5a6b2d735d1fcb7a2d7f0d73389cfe1397185fbf64f6d5f7cac",
          "linkedWithoutMetadata": "43e206a7da14e5a6b2d735d1fcb7a2d7f0d73389cfe1397185fbf64f6d5f7cac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)13",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)13": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "fdcc6e1d13fedd3edd12c939c18b10d9f41d5c6244debb6a08a2df396aa3e844",
          "withoutMetadata": "837c34dad08b76c9ea4b03a1c5d4f46fb87b36a0e248dcedeebfd742eb540d39",
          "linkedWithoutMetadata": "837c34dad08b76c9ea4b03a1c5d4f46fb87b36a0e248dcedeebfd742eb540d39"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()",
          "withdrawTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)11",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)11": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/SaleCampaign.sol:IGroup1": {
        "src": "contracts\\SaleCampaign.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SaleCampaign.sol:SaleCampaign": {
        "src": "contracts\\SaleCampaign.sol:8",
        "version": {
          "withMetadata": "a4a611e9d5a82f5b6ebbdd52aa053b26d1284b70ac34fb1dfcd07303d48f62ba",
          "withoutMetadata": "d467287091ff4380bb7280aecb7fc6664bd480aec438fc76167b5f9ffd6ad43a",
          "linkedWithoutMetadata": "d467287091ff4380bb7280aecb7fc6664bd480aec438fc76167b5f9ffd6ad43a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "buyTokens(uint256)",
          "getTokenPrice()",
          "withdrawTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaleCampaign",
            "src": "contracts\\SaleCampaign.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGroup1)11",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:10"
            },
            {
              "label": "saleStartTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:11"
            },
            {
              "label": "totalSold",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:12"
            },
            {
              "label": "maxSaleAmount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:13"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaleCampaign",
              "src": "contracts\\SaleCampaign.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IGroup1)11": {
              "label": "contract IGroup1",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Group1.sol:Group1": {
        "src": "contracts\\Group1.sol:6",
        "version": {
          "withMetadata": "965c93cf3fdfc8f9df99d7806cd9ef889056fe81e64067d5906cc53b42014888",
          "withoutMetadata": "e423151eb87ad1eee88d261c9be8460e4008788a27554e027eed94e53aed83e1",
          "linkedWithoutMetadata": "e423151eb87ad1eee88d261c9be8460e4008788a27554e027eed94e53aed83e1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Group1",
            "src": "contracts\\Group1.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@uniswap/lib/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\lib\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "47956502c7116dde8bc57e8584feff3ea7de32408d8a1a40b83725f584c82c47",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contract1/interfaces/ICamelotFactory.sol:ICamelotFactory": {
        "src": "contract1\\interfaces\\ICamelotFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feePercentOwner()",
          "setStableOwner()",
          "feeTo()",
          "ownerFeeShare()",
          "referrersFeeShare(address)",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "feeInfo()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contract1/interfaces/ICamelotPair.sol:ICamelotPair": {
        "src": "contract1\\interfaces\\ICamelotPair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "getAmountOut(uint256,address)",
          "kLast()",
          "setFeePercent(uint16,uint16)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "swap(uint256,uint256,address,bytes,address)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contract1/interfaces/IERC20.sol:IERC20": {
        "src": "contract1\\interfaces\\IERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Counter.sol:Counter": {
        "src": "contracts\\Counter.sol:4",
        "version": {
          "withMetadata": "453c144b83d2877de75132db0e49a3045f86ec028266578c4425d215f0194ccc",
          "withoutMetadata": "6559e52bd24be5ad36ec3fbd2d3f4cdb984a0712dbcfca6a438ccb7d2cd92a0d",
          "linkedWithoutMetadata": "6559e52bd24be5ad36ec3fbd2d3f4cdb984a0712dbcfca6a438ccb7d2cd92a0d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get()",
          "inc()",
          "dec()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "count",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Counter",
              "src": "contracts\\Counter.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/Migrations.sol:Migrations": {
        "src": "contracts\\Migrations.sol:4",
        "version": {
          "withMetadata": "3d9920fb4448dc8b42baecbb809afafb26d6ea6507ae813a72097d27e1fd8081",
          "withoutMetadata": "c5565779356de17a0495e7fcd99388d5c40df2760d70c41cdeddbf64acaf296b",
          "linkedWithoutMetadata": "c5565779356de17a0495e7fcd99388d5c40df2760d70c41cdeddbf64acaf296b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts\\Migrations.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:5"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WETH.sol:IWETH": {
        "src": "contracts\\WETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/WETH.sol:WETH": {
        "src": "contracts\\WETH.sol:10",
        "version": {
          "withMetadata": "45e99711340823ba5b91de270afd9dd8eff5c5db97c1ecbd90f837d86d82829d",
          "withoutMetadata": "6db14524a49be46303efb273602379a699539c72222983941a694d10c0263a3d",
          "linkedWithoutMetadata": "6db14524a49be46303efb273602379a699539c72222983941a694d10c0263a3d"
        },
        "inherit": [
          "contracts/WETH.sol:IWETH"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\WETH.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\WETH.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\WETH.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:11"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:12"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:13"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:18"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/ICamelotRouter.sol:ICamelotRouter": {
        "src": "contracts\\interfaces\\ICamelotRouter.sol:5",
        "inherit": [
          "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01": {
        "src": "contracts\\interfaces\\IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/IWETH.sol:IWETH": {
        "src": "contracts\\interfaces\\IWETH.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "contracts/Counter.sol:Counter": {
        "src": "contracts\\Counter.sol:4",
        "version": {
          "withMetadata": "e75a0efceb03fc242480272343f055dda00e1b4fdc175a0d1f6d5235edd901f8",
          "withoutMetadata": "1dfcc1f9eb18f43ec990201c8cbde0f89dca8181cdc7c23a0d1bc708c62682b0",
          "linkedWithoutMetadata": "1dfcc1f9eb18f43ec990201c8cbde0f89dca8181cdc7c23a0d1bc708c62682b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get()",
          "inc()",
          "dec()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "count",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Counter",
              "src": "contracts\\Counter.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      }
    },
    {
      "@uniswap/lib/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\lib\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "3158bf913f07acba67a2e06c6a7dfbd30f00376eea5539fc8f93bdaae44f0bbc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contract1/interfaces/ICamelotFactory.sol:ICamelotFactory": {
        "src": "contract1\\interfaces\\ICamelotFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feePercentOwner()",
          "setStableOwner()",
          "feeTo()",
          "ownerFeeShare()",
          "referrersFeeShare(address)",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "feeInfo()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contract1/interfaces/ICamelotPair.sol:ICamelotPair": {
        "src": "contract1\\interfaces\\ICamelotPair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "getAmountOut(uint256,address)",
          "kLast()",
          "setFeePercent(uint16,uint16)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "swap(uint256,uint256,address,bytes,address)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contract1/interfaces/IERC20.sol:IERC20": {
        "src": "contract1\\interfaces\\IERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contracts/Migrations.sol:Migrations": {
        "src": "contracts\\Migrations.sol:4",
        "version": {
          "withMetadata": "e9b59f323bd6427d84b6b7b1a38642275e9ae8745c7ad4afab1a56a02bd0aceb",
          "withoutMetadata": "992e7a0bd9ca864ba818a996e7e37b67c2d02b6b0a9e7a1ce83e97e873f711cf",
          "linkedWithoutMetadata": "992e7a0bd9ca864ba818a996e7e37b67c2d02b6b0a9e7a1ce83e97e873f711cf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts\\Migrations.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:5"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contracts/WETH.sol:IWETH": {
        "src": "contracts\\WETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contracts/WETH.sol:WETH": {
        "src": "contracts\\WETH.sol:10",
        "version": {
          "withMetadata": "216faddafbe2554b663a776036ed66b19455bf69cf7e01c717aa41d115d16b1e",
          "withoutMetadata": "fe34b200d228b3d8223312861a85035ea48cf7281cfbcf1c1e03558cdb85409a",
          "linkedWithoutMetadata": "fe34b200d228b3d8223312861a85035ea48cf7281cfbcf1c1e03558cdb85409a"
        },
        "inherit": [
          "contracts/WETH.sol:IWETH"
        ],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\WETH.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\WETH.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\WETH.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:11"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:12"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:13"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:18"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WETH",
              "src": "contracts\\WETH.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contracts/interfaces/ICamelotRouter.sol:ICamelotRouter": {
        "src": "contracts\\interfaces\\ICamelotRouter.sol:5",
        "inherit": [
          "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01": {
        "src": "contracts\\interfaces\\IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      },
      "contracts/interfaces/IWETH.sol:IWETH": {
        "src": "contracts\\interfaces\\IWETH.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.0"
      }
    },
    {
      "@uniswap/lib/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap\\lib\\contracts\\libraries\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "8c75d5e264caa3c51e5e8881379591319516eb81a0d4ad2b7870ef0f73146151",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contract1/interfaces/ICamelotFactory.sol:ICamelotFactory": {
        "src": "contract1\\interfaces\\ICamelotFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feePercentOwner()",
          "setStableOwner()",
          "feeTo()",
          "ownerFeeShare()",
          "referrersFeeShare(address)",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "feeInfo()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contract1/interfaces/ICamelotPair.sol:ICamelotPair": {
        "src": "contract1\\interfaces\\ICamelotPair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "getAmountOut(uint256,address)",
          "kLast()",
          "setFeePercent(uint16,uint16)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "swap(uint256,uint256,address,bytes,address)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contract1/interfaces/IERC20.sol:IERC20": {
        "src": "contract1\\interfaces\\IERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/CamelotRouter.sol:CamelotRouter": {
        "src": "contracts\\CamelotRouter.sol:14",
        "version": {
          "withMetadata": "29247acf469795704d5f70938206d7c9e08d6744bc1178a3dbfabd1c075e3156",
          "withoutMetadata": "649f26a4e01f6ae6d4564f7e1f4d0bf02d98cc2e30543deae7a34c9ce5c95657",
          "linkedWithoutMetadata": "649f26a4e01f6ae6d4564f7e1f4d0bf02d98cc2e30543deae7a34c9ce5c95657"
        },
        "inherit": [
          "contracts/interfaces/ICamelotRouter.sol:ICamelotRouter",
          "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01"
        ],
        "libraries": [
          "contracts/libraries/SafeMath.sol:SafeMath",
          "contracts/libraries/UniswapV2Library.sol:UniswapV2Library",
          "@uniswap/lib/contracts/libraries/TransferHelper.sol:TransferHelper"
        ],
        "methods": [
          "(address,address)",
          "()",
          "getPair(address,address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CamelotRouter",
            "src": "contracts\\CamelotRouter.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts\\CamelotRouter.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\CamelotRouter.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/Migrations.sol:Migrations": {
        "src": "contracts\\Migrations.sol:4",
        "version": {
          "withMetadata": "16ae025b8a3c8cc63a2bc9ec21d64bd65eaeb895b12d515234e7adff38659058",
          "withoutMetadata": "63271ad361a16dad9eefaa592c1679b27802cd2ff8db1ddf22fd2502381a071f",
          "linkedWithoutMetadata": "63271ad361a16dad9eefaa592c1679b27802cd2ff8db1ddf22fd2502381a071f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts\\Migrations.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:5"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/interfaces/ICamelotRouter.sol:ICamelotRouter": {
        "src": "contracts\\interfaces\\ICamelotRouter.sol:5",
        "inherit": [
          "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01": {
        "src": "contracts\\interfaces\\IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/interfaces/IWETH.sol:IWETH": {
        "src": "contracts\\interfaces\\IWETH.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/libraries/SafeMath.sol:SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:5",
        "version": {
          "withMetadata": "cdeaf38163007dc1c5f2b843a674b733fda477e6526f736fcd0280da3b7af7c1",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/libraries/UniswapV2Library.sol:UniswapV2Library": {
        "src": "contracts\\libraries\\UniswapV2Library.sol:7",
        "version": {
          "withMetadata": "9a945bda5a41f1e179e86581eb6b8433158db4d1f2cc98fab3985bc3ef8da06f",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/test/DeflatingERC20.sol:DeflatingERC20": {
        "src": "contracts\\test\\DeflatingERC20.sol:5",
        "version": {
          "withMetadata": "a4a450952ef60842f71f1633920bbe99971d6a656dff3c4b48eb5522e7ea74ee",
          "withoutMetadata": "a4a450952ef60842f71f1633920bbe99971d6a656dff3c4b48eb5522e7ea74ee",
          "linkedWithoutMetadata": "a4a450952ef60842f71f1633920bbe99971d6a656dff3c4b48eb5522e7ea74ee"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint256)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeflatingERC20",
            "src": "contracts\\test\\DeflatingERC20.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DeflatingERC20",
              "src": "contracts\\test\\DeflatingERC20.sol:11"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DeflatingERC20",
              "src": "contracts\\test\\DeflatingERC20.sol:12"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DeflatingERC20",
              "src": "contracts\\test\\DeflatingERC20.sol:13"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "DeflatingERC20",
              "src": "contracts\\test\\DeflatingERC20.sol:15"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DeflatingERC20",
              "src": "contracts\\test\\DeflatingERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/test/ERC20.sol:ERC20": {
        "src": "contracts\\test\\ERC20.sol:5",
        "version": {
          "withMetadata": "34d104d7e34e53a57442fe930dd105e652f89496e2db944e9ff7d76be9429984",
          "withoutMetadata": "34d104d7e34e53a57442fe930dd105e652f89496e2db944e9ff7d76be9429984",
          "linkedWithoutMetadata": "34d104d7e34e53a57442fe930dd105e652f89496e2db944e9ff7d76be9429984"
        },
        "inherit": [],
        "libraries": [
          "contracts/libraries/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint256)",
          "mint(address,uint256)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\test\\ERC20.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\test\\ERC20.sol:11"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\test\\ERC20.sol:12"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\test\\ERC20.sol:13"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts\\test\\ERC20.sol:15"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\test\\ERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/test/RouterEventEmitter.sol:RouterEventEmitter": {
        "src": "contracts\\test\\RouterEventEmitter.sol:5",
        "version": {
          "withMetadata": "f26f599556aee9451399ccca9d69897ee662c344819bad42a06d319b3bbefd4c",
          "withoutMetadata": "ce409b19f2e8a7b642c7d0f46699c554f3c6577c2c8088defda44dd86c8dc43b",
          "linkedWithoutMetadata": "ce409b19f2e8a7b642c7d0f46699c554f3c6577c2c8088defda44dd86c8dc43b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "swapExactTokensForTokens(address,uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(address,uint256,address[],address,uint256)",
          "swapExactTokensForETH(address,uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\test\\RouterEventEmitter.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\test\\RouterEventEmitter.sol:32"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\test\\RouterEventEmitter.sol:47"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      },
      "contracts/test/WETH9.sol:WETH9": {
        "src": "contracts\\test\\WETH9.sol:18",
        "version": {
          "withMetadata": "8bf16992d6f9709c30b201e299c836687afb92e2102ee3e01d9b8243a44be9e9",
          "withoutMetadata": "6185c3c372149b6309ab80da9b999dc72a20b25359a2353815f02fe8476a3027",
          "linkedWithoutMetadata": "6185c3c372149b6309ab80da9b999dc72a20b25359a2353815f02fe8476a3027"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\test\\WETH9.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\test\\WETH9.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\test\\WETH9.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WETH9",
              "src": "contracts\\test\\WETH9.sol:19"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WETH9",
              "src": "contracts\\test\\WETH9.sol:20"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WETH9",
              "src": "contracts\\test\\WETH9.sol:21"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WETH9",
              "src": "contracts\\test\\WETH9.sol:28"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WETH9",
              "src": "contracts\\test\\WETH9.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.6"
      }
    },
    {
      "contracts/CamelotFactory.sol:CamelotFactory": {
        "src": "contracts\\CamelotFactory.sol:6",
        "version": {
          "withMetadata": "30a7ee4b6af06505114b5f3c1330f80d0c78af5a36f80a54310c3c08b33d042e",
          "withoutMetadata": "b363f0fd2fb92ea758a7e7aa593fe80fefa84357747e2251141eaecbc8477a19",
          "linkedWithoutMetadata": "b363f0fd2fb92ea758a7e7aa593fe80fefa84357747e2251141eaecbc8477a19"
        },
        "inherit": [
          "contracts/interfaces/ICamelotFactory.sol:ICamelotFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setOwner(address)",
          "setFeePercentOwner(address)",
          "setSetStableOwner(address)",
          "setFeeTo(address)",
          "setOwnerFeeShare(uint256)",
          "setReferrerFeeShare(address,uint256)",
          "feeInfo()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CamelotFactory",
            "src": "contracts\\CamelotFactory.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ownerFeeShare",
            "src": "contracts\\CamelotFactory.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:7"
            },
            {
              "label": "feePercentOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:8"
            },
            {
              "label": "setStableOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:9"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:10"
            },
            {
              "label": "ownerFeeShare",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:14"
            },
            {
              "label": "referrersFeeShare",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:17"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:19"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CamelotFactory",
              "src": "contracts\\CamelotFactory.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/CamelotPair.sol:CamelotPair": {
        "src": "contracts\\CamelotPair.sol:10",
        "version": {
          "withMetadata": "3de88dd71af0689745f1438aa635f7acc5bed29a95be10f8be0e1cf58abc9307",
          "withoutMetadata": "3de88dd71af0689745f1438aa635f7acc5bed29a95be10f8be0e1cf58abc9307",
          "linkedWithoutMetadata": "3de88dd71af0689745f1438aa635f7acc5bed29a95be10f8be0e1cf58abc9307"
        },
        "inherit": [
          "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
          "contracts/interfaces/IUniswapV2ERC20.sol:IUniswapV2ERC20",
          "contracts/interfaces/ICamelotPair.sol:ICamelotPair"
        ],
        "libraries": [
          "contracts/libraries/SafeMath.sol:SafeMath",
          "contracts/libraries/Math.sol:Math"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "setFeePercent(uint16,uint16)",
          "setStableSwap(bool,uint112,uint112)",
          "setPairTypeImmutable()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "swap(uint256,uint256,address,bytes,address)",
          "getAmountOut(uint256,address)",
          "skim(address)",
          "sync()",
          "drainWrongToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CamelotPair",
            "src": "contracts\\CamelotPair.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "token0FeePercent",
            "src": "contracts\\CamelotPair.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "token1FeePercent",
            "src": "contracts\\CamelotPair.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\CamelotPair.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:14"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:16"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:19"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:16"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:17"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:18"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:20"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:25"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:26"
            },
            {
              "label": "token0FeePercent",
              "offset": 28,
              "slot": "8",
              "type": "t_uint16",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:27"
            },
            {
              "label": "token1FeePercent",
              "offset": 30,
              "slot": "8",
              "type": "t_uint16",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:28"
            },
            {
              "label": "precisionMultiplier0",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:30"
            },
            {
              "label": "precisionMultiplier1",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:31"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:33"
            },
            {
              "label": "stableSwap",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:35"
            },
            {
              "label": "pairTypeImmutable",
              "offset": 1,
              "slot": "12",
              "type": "t_bool",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:36"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CamelotPair",
              "src": "contracts\\CamelotPair.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/UniswapV2ERC20.sol:UniswapV2ERC20": {
        "src": "contracts\\UniswapV2ERC20.sol:6",
        "version": {
          "withMetadata": "841334d19b06d72443d7a7161e4bf0c51785ac709686231acee6878fa8a4f258",
          "withoutMetadata": "841334d19b06d72443d7a7161e4bf0c51785ac709686231acee6878fa8a4f258",
          "linkedWithoutMetadata": "841334d19b06d72443d7a7161e4bf0c51785ac709686231acee6878fa8a4f258"
        },
        "inherit": [
          "contracts/interfaces/IUniswapV2ERC20.sol:IUniswapV2ERC20"
        ],
        "libraries": [
          "contracts/libraries/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV2ERC20",
            "src": "contracts\\UniswapV2ERC20.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:14"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:16"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/interfaces/ICamelotFactory.sol:ICamelotFactory": {
        "src": "contracts\\interfaces\\ICamelotFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feePercentOwner()",
          "setStableOwner()",
          "feeTo()",
          "ownerFeeShare()",
          "referrersFeeShare(address)",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "feeInfo()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/interfaces/ICamelotPair.sol:ICamelotPair": {
        "src": "contracts\\interfaces\\ICamelotPair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "getAmountOut(uint256,address)",
          "kLast()",
          "setFeePercent(uint16,uint16)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "swap(uint256,uint256,address,bytes,address)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/interfaces/IERC20.sol:IERC20": {
        "src": "contracts\\interfaces\\IERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/interfaces/IUniswapV2Callee.sol:IUniswapV2Callee": {
        "src": "contracts\\interfaces\\IUniswapV2Callee.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/interfaces/IUniswapV2ERC20.sol:IUniswapV2ERC20": {
        "src": "contracts\\interfaces\\IUniswapV2ERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/libraries/Math.sol:Math": {
        "src": "contracts\\libraries\\Math.sol:5",
        "version": {
          "withMetadata": "6c1a5489cf1f860c123badd9db5eac9ab3ce369f1fb41e44d5dfba3f47de3353",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/libraries/SafeMath.sol:SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:5",
        "version": {
          "withMetadata": "cca5fe4291d2dd160a3587213dc46b861569c13143e5d8c846e34c024292af09",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      },
      "contracts/test/ERC20.sol:ERC20": {
        "src": "contracts\\test\\ERC20.sol:5",
        "version": {
          "withMetadata": "246e6666136af4497adb18ff651c8d8d303a2a7aa0a1be9c68378c2c5c3df867",
          "withoutMetadata": "246e6666136af4497adb18ff651c8d8d303a2a7aa0a1be9c68378c2c5c3df867",
          "linkedWithoutMetadata": "246e6666136af4497adb18ff651c8d8d303a2a7aa0a1be9c68378c2c5c3df867"
        },
        "inherit": [
          "contracts/UniswapV2ERC20.sol:UniswapV2ERC20",
          "contracts/interfaces/IUniswapV2ERC20.sol:IUniswapV2ERC20"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\test\\ERC20.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:12"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:14"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:16"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts\\UniswapV2ERC20.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      }
    },
    {
      "contracts/test/WETH.sol:WETH": {
        "src": "contracts\\test\\WETH.sol:3",
        "version": {
          "withMetadata": "975ff126f95f0e6d45d17349b848ce6672e55be2cb2a13c196bc1dfbe6a6823f",
          "withoutMetadata": "3e330b779f88e36d72cc945daaebb7438dcd8d8ae7c3d1c370ae35ca1378665f",
          "linkedWithoutMetadata": "3e330b779f88e36d72cc945daaebb7438dcd8d8ae7c3d1c370ae35ca1378665f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\test\\WETH.sol:4"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\test\\WETH.sol:5"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\test\\WETH.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts\\test\\WETH.sol:4"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WETH",
              "src": "contracts\\test\\WETH.sol:5"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WETH",
              "src": "contracts\\test\\WETH.sol:6"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WETH",
              "src": "contracts\\test\\WETH.sol:13"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WETH",
              "src": "contracts\\test\\WETH.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      }
    },
    {
      "contracts/libraries/UQ112x112.sol:UQ112x112": {
        "src": "contracts\\libraries\\UQ112x112.sol:8",
        "version": {
          "withMetadata": "78bf289bf4802fcd2460acb349a79b8c5982d5f136320622164221d41e00e7e0",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      }
    },
    {
      "contracts/Migrations.sol:Migrations": {
        "src": "contracts\\Migrations.sol:4",
        "version": {
          "withMetadata": "60f9c8ca5c9a6aba24742ee4482c0aacca63fd50b828012eccb1fcec92c1f439",
          "withoutMetadata": "87310bbec959f8a8ce64a95093932b5eae59672e150730a8775c039f59e3aaf5",
          "linkedWithoutMetadata": "87310bbec959f8a8ce64a95093932b5eae59672e150730a8775c039f59e3aaf5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts\\Migrations.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:5"
            },
            {
              "label": "last_completed_migration",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Migrations",
              "src": "contracts\\Migrations.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.5.16"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step": {
        "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:25",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuardTransient.sol:15",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/TransientSlot.sol:TransientSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/TransientSlot.sol:TransientSlot": {
        "src": "@openzeppelin\\contracts\\utils\\TransientSlot.sol:33",
        "version": {
          "withMetadata": "5404e4ac8160ac6781eae57bd16a21644048c8f23eedd705eca9b615a2fd0cae",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "clones-with-immutable-args/Clone.sol:Clone": {
        "src": "clones-with-immutable-args\\Clone.sol:7",
        "version": {
          "withMetadata": "11bf80c2ccb45295efb97e5ab6dcf2050482b62c1198efd54c968334bf605d4a",
          "withoutMetadata": "318af2b9f79fb1a26a43fe08388396089aafa6fc13628f4892a0d3f8270a6c4b",
          "linkedWithoutMetadata": "318af2b9f79fb1a26a43fe08388396089aafa6fc13628f4892a0d3f8270a6c4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "clones-with-immutable-args/ClonesWithImmutableArgs.sol:ClonesWithImmutableArgs": {
        "src": "clones-with-immutable-args\\ClonesWithImmutableArgs.sol:8",
        "version": {
          "withMetadata": "f4ad481d895064224e8438d7ae93baca73d4ff70eab3329a82d0620b86c827c9",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/Points.sol:Points": {
        "src": "contracts\\Points.sol:9",
        "version": {
          "withMetadata": "4538862830a389296032578a5845b15b6555dba7b5c8bd61d45367c6e4eaf013",
          "withoutMetadata": "23448885161ad3a2dd7be6d3165d04ff77f29f46c763339ebd0e669785a150e5",
          "linkedWithoutMetadata": "23448885161ad3a2dd7be6d3165d04ff77f29f46c763339ebd0e669785a150e5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "addAllowedVault(address)",
          "addAllowedIP(address)",
          "award(address,uint256)",
          "award(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Points",
            "src": "contracts\\Points.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pointsFactory",
            "src": "contracts\\Points.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            },
            {
              "label": "isAllowedVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Points",
              "src": "contracts\\Points.sol:37"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Points",
              "src": "contracts\\Points.sol:43"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Points",
              "src": "contracts\\Points.sol:45"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Points",
              "src": "contracts\\Points.sol:47"
            },
            {
              "label": "allowedIPs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Points",
              "src": "contracts\\Points.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/PointsFactory.sol:PointsFactory": {
        "src": "contracts\\PointsFactory.sol:10",
        "version": {
          "withMetadata": "81286be18d667bd2e7ec133e8d6e19b8c8d87b183b7f2614ba8b299777ec9935",
          "withoutMetadata": "fed2ee0410a67e587a40edbd4e7634a8edcd7e4b6c75f0d47bcbc749b972095f",
          "linkedWithoutMetadata": "fed2ee0410a67e587a40edbd4e7634a8edcd7e4b6c75f0d47bcbc749b972095f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addRecipeMarketHub(address)",
          "createPointsProgram(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PointsFactory",
            "src": "contracts\\PointsFactory.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            },
            {
              "label": "isPointsProgram",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PointsFactory",
              "src": "contracts\\PointsFactory.sol:12"
            },
            {
              "label": "isRecipeMarketHub",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PointsFactory",
              "src": "contracts\\PointsFactory.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/RecipeMarketHub.sol:RecipeMarketHub": {
        "src": "contracts\\RecipeMarketHub.sol:14",
        "version": {
          "withMetadata": "5c060cd2f3c298c1a7c907c29939407ef225a2d17678d8253bdb32347b397de1",
          "withoutMetadata": "6265b97fccbe1d4acea6da4a2564300bb9736d48c739fa81f8228680b73b1541",
          "linkedWithoutMetadata": "6265b97fccbe1d4acea6da4a2564300bb9736d48c739fa81f8228680b73b1541"
        },
        "inherit": [
          "contracts/base/RecipeMarketHubBase.sol:RecipeMarketHubBase",
          "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient",
          "solmate/src/auth/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,address,address)",
          "createMatket(address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RecipeMarketHub",
            "src": "contracts\\RecipeMarketHub.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            },
            {
              "label": "numAPOffers",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:32"
            },
            {
              "label": "numIPOffers",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:34"
            },
            {
              "label": "numMarkets",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:36"
            },
            {
              "label": "offersPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:39"
            },
            {
              "label": "protocolFee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:42"
            },
            {
              "label": "protocolFeeClaimant",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:43"
            },
            {
              "label": "minimumFrontendFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:46"
            },
            {
              "label": "marketHashToWeirollMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_struct(WeirollMarket)1979_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:49"
            },
            {
              "label": "offerHashToIPOffer",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(IPOffer)2008_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:52"
            },
            {
              "label": "offerHashToRemainingQuantity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:54"
            },
            {
              "label": "weirollWalletToLockedIncentivesParams",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(LockedRewardParams)2046_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:57"
            },
            {
              "label": "feeClaimantToTokenToAmount",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ERC20)3090": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_enum(RewardStyle)1884": {
              "label": "enum RewardStyle",
              "members": [
                "Upfront",
                "Arrear",
                "Forfeitable"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockedRewardParams)2046_storage)": {
              "label": "mapping(address => struct RecipeMarketHubBase.LockedRewardParams)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(IPOffer)2008_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.IPOffer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(WeirollMarket)1979_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.WeirollMarket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(IPOffer)2008_storage": {
              "label": "struct RecipeMarketHubBase.IPOffer",
              "members": [
                {
                  "label": "offerID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "targetMarketHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "remainingQuantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "incentivesOffered",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "incentiveAmountsOffered",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "incentiveToProtocolFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "incentiveToFrontendFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(LockedRewardParams)2046_storage": {
              "label": "struct RecipeMarketHubBase.LockedRewardParams",
              "members": [
                {
                  "label": "incentives",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amounts",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFeeRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wasIPOffer",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "offerHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "protocolFeeAtFill",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Recipe)1959_storage": {
              "label": "struct RecipeMarketHubBase.Recipe",
              "members": [
                {
                  "label": "weirollCommands",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weirollState",
                  "type": "t_array(t_bytes_storage)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(WeirollMarket)1979_storage": {
              "label": "struct RecipeMarketHubBase.WeirollMarket",
              "members": [
                {
                  "label": "marketID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "inputToken",
                  "type": "t_contract(ERC20)3090",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lockupTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositRecipe",
                  "type": "t_struct(Recipe)1959_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawRecipe",
                  "type": "t_struct(Recipe)1959_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "rewardStyle",
                  "type": "t_enum(RewardStyle)1884",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/WeirollWallet.sol:WeirollWallet": {
        "src": "contracts\\WeirollWallet.sol:13",
        "version": {
          "withMetadata": "5074997779f076b164cb56dde343f73c9ce8f2bf48a931582218a5f2588f9208",
          "withoutMetadata": "2c3e1d6a5c7796c94544f427a1fb5b3baad9c85e283eb3703170a218e9ece0d5",
          "linkedWithoutMetadata": "2c3e1d6a5c7796c94544f427a1fb5b3baad9c85e283eb3703170a218e9ece0d5"
        },
        "inherit": [
          "weiroll/contracts/VM.sol:VM",
          "clones-with-immutable-args/Clone.sol:Clone",
          "contracts/interfaces/IERC1271.sol:IERC1271"
        ],
        "libraries": [
          "solady/src/utils/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "()",
          "forfeit()",
          "owner()",
          "recipeMarketHub()",
          "amount()",
          "lockedUntil()",
          "isForfeitable()",
          "marketHash()",
          "executeWeiroll(bytes32[],bytes[])",
          "manualExecuteWeiroll(bytes32[],bytes[])",
          "execute(address,uint256,bytes)",
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          },
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "executed",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "WeirollWallet",
              "src": "contracts\\WeirollWallet.sol:57"
            },
            {
              "label": "forfeited",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "WeirollWallet",
              "src": "contracts\\WeirollWallet.sol:59"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/base/RecipeMarketHubBase.sol:RecipeMarketHubBase": {
        "src": "contracts\\base\\RecipeMarketHubBase.sol:18",
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient",
          "solmate/src/auth/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "setOffersPaused(bool)",
          "setProtocolFeeClaimant(address)",
          "setProtocolFee(uint256)",
          "setMinimumFrontendFee(uint256)",
          "getMarketHash((uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8))",
          "getAPOfferHash((uint256,bytes32,address,address,uint256,uint256,address[],uint256[]))",
          "getIPOfferHash(uint256,bytes32,address,uint256,uint256,address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "WEIROLL_WALLET_IMPLEMENTATION",
            "src": "contracts\\base\\RecipeMarketHubBase.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "POINTS_FACTORY",
            "src": "contracts\\base\\RecipeMarketHubBase.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            },
            {
              "label": "numAPOffers",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:32"
            },
            {
              "label": "numIPOffers",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:34"
            },
            {
              "label": "numMarkets",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:36"
            },
            {
              "label": "offersPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:39"
            },
            {
              "label": "protocolFee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:42"
            },
            {
              "label": "protocolFeeClaimant",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:43"
            },
            {
              "label": "minimumFrontendFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:46"
            },
            {
              "label": "marketHashToWeirollMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_struct(WeirollMarket)1979_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:49"
            },
            {
              "label": "offerHashToIPOffer",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(IPOffer)2008_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:52"
            },
            {
              "label": "offerHashToRemainingQuantity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:54"
            },
            {
              "label": "weirollWalletToLockedIncentivesParams",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(LockedRewardParams)2046_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:57"
            },
            {
              "label": "feeClaimantToTokenToAmount",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ERC20)3090": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_enum(RewardStyle)1884": {
              "label": "enum RewardStyle",
              "members": [
                "Upfront",
                "Arrear",
                "Forfeitable"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockedRewardParams)2046_storage)": {
              "label": "mapping(address => struct RecipeMarketHubBase.LockedRewardParams)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(IPOffer)2008_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.IPOffer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(WeirollMarket)1979_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.WeirollMarket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(IPOffer)2008_storage": {
              "label": "struct RecipeMarketHubBase.IPOffer",
              "members": [
                {
                  "label": "offerID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "targetMarketHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "remainingQuantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "incentivesOffered",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "incentiveAmountsOffered",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "incentiveToProtocolFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "incentiveToFrontendFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(LockedRewardParams)2046_storage": {
              "label": "struct RecipeMarketHubBase.LockedRewardParams",
              "members": [
                {
                  "label": "incentives",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amounts",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFeeRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wasIPOffer",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "offerHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "protocolFeeAtFill",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Recipe)1959_storage": {
              "label": "struct RecipeMarketHubBase.Recipe",
              "members": [
                {
                  "label": "weirollCommands",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weirollState",
                  "type": "t_array(t_bytes_storage)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(WeirollMarket)1979_storage": {
              "label": "struct RecipeMarketHubBase.WeirollMarket",
              "members": [
                {
                  "label": "marketID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "inputToken",
                  "type": "t_contract(ERC20)3090",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lockupTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositRecipe",
                  "type": "t_struct(Recipe)1959_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawRecipe",
                  "type": "t_struct(Recipe)1959_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "rewardStyle",
                  "type": "t_enum(RewardStyle)1884",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "contracts\\interfaces\\IERC1271.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solady/src/utils/ECDSA.sol:ECDSA": {
        "src": "solady\\src\\utils\\ECDSA.sol:26",
        "version": {
          "withMetadata": "f45e216fe5e4954aae2c2430ec850b932c83e01348e4a8ec0d52182caf2d6926",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/auth/Owned.sol:Owned": {
        "src": "solmate\\src\\auth\\Owned.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "solmate\\src\\auth\\Owned.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/tokens/ERC20.sol:ERC20": {
        "src": "solmate\\src\\tokens\\ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate\\src\\tokens\\ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate\\src\\tokens\\ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate\\src\\tokens\\ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate\\src\\tokens\\ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/tokens/ERC4626.sol:ERC4626": {
        "src": "solmate\\src\\tokens\\ERC4626.sol:10",
        "inherit": [
          "solmate/src/tokens/ERC20.sol:ERC20"
        ],
        "libraries": [
          "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib",
          "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib"
        ],
        "methods": [
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "previewDeposit(uint256)",
          "previewMint(uint256)",
          "previewWithdraw(uint256)",
          "previewRedeem(uint256)",
          "maxDeposit(address)",
          "maxMint(address)",
          "maxWithdraw(address)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC4626",
            "src": "solmate\\src\\tokens\\ERC4626.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "asset",
            "src": "solmate\\src\\tokens\\ERC4626.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib": {
        "src": "solmate\\src\\utils\\FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "e7adcd0f441c9817b5239fbe7c983301bd41ee03422d13d0218cbb932cf9ddde",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "solmate\\src\\utils\\SafeTransferLib.sol:9",
        "version": {
          "withMetadata": "bdb6bf9b4f628a799e5652d2907ebe3438fc4bac46b0a81658745906fcc4b349",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "weiroll/contracts/CommandBuilder.sol:CommandBuilder": {
        "src": "weiroll\\contracts\\CommandBuilder.sol:10",
        "version": {
          "withMetadata": "ed82d647af2d71050abf01b0416a46545b61c978c5a57a40d153dfadff3911a8",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "weiroll/contracts/VM.sol:VM": {
        "src": "weiroll\\contracts\\VM.sol:18",
        "inherit": [],
        "libraries": [
          "weiroll/contracts/CommandBuilder.sol:CommandBuilder"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VM",
            "src": "weiroll\\contracts\\VM.sol:29"
          },
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "self",
            "src": "weiroll\\contracts\\VM.sol:21"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step": {
        "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:25",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuardTransient.sol:15",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/TransientSlot.sol:TransientSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/TransientSlot.sol:TransientSlot": {
        "src": "@openzeppelin\\contracts\\utils\\TransientSlot.sol:33",
        "version": {
          "withMetadata": "5404e4ac8160ac6781eae57bd16a21644048c8f23eedd705eca9b615a2fd0cae",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "clones-with-immutable-args/Clone.sol:Clone": {
        "src": "clones-with-immutable-args\\Clone.sol:7",
        "version": {
          "withMetadata": "11bf80c2ccb45295efb97e5ab6dcf2050482b62c1198efd54c968334bf605d4a",
          "withoutMetadata": "318af2b9f79fb1a26a43fe08388396089aafa6fc13628f4892a0d3f8270a6c4b",
          "linkedWithoutMetadata": "318af2b9f79fb1a26a43fe08388396089aafa6fc13628f4892a0d3f8270a6c4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "clones-with-immutable-args/ClonesWithImmutableArgs.sol:ClonesWithImmutableArgs": {
        "src": "clones-with-immutable-args\\ClonesWithImmutableArgs.sol:8",
        "version": {
          "withMetadata": "f4ad481d895064224e8438d7ae93baca73d4ff70eab3329a82d0620b86c827c9",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/Points.sol:Points": {
        "src": "contracts\\Points.sol:9",
        "version": {
          "withMetadata": "4538862830a389296032578a5845b15b6555dba7b5c8bd61d45367c6e4eaf013",
          "withoutMetadata": "23448885161ad3a2dd7be6d3165d04ff77f29f46c763339ebd0e669785a150e5",
          "linkedWithoutMetadata": "23448885161ad3a2dd7be6d3165d04ff77f29f46c763339ebd0e669785a150e5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "addAllowedVault(address)",
          "addAllowedIP(address)",
          "award(address,uint256)",
          "award(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Points",
            "src": "contracts\\Points.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pointsFactory",
            "src": "contracts\\Points.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            },
            {
              "label": "isAllowedVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Points",
              "src": "contracts\\Points.sol:37"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Points",
              "src": "contracts\\Points.sol:43"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Points",
              "src": "contracts\\Points.sol:45"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Points",
              "src": "contracts\\Points.sol:47"
            },
            {
              "label": "allowedIPs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Points",
              "src": "contracts\\Points.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/PointsFactory.sol:PointsFactory": {
        "src": "contracts\\PointsFactory.sol:10",
        "version": {
          "withMetadata": "81286be18d667bd2e7ec133e8d6e19b8c8d87b183b7f2614ba8b299777ec9935",
          "withoutMetadata": "fed2ee0410a67e587a40edbd4e7634a8edcd7e4b6c75f0d47bcbc749b972095f",
          "linkedWithoutMetadata": "fed2ee0410a67e587a40edbd4e7634a8edcd7e4b6c75f0d47bcbc749b972095f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addRecipeMarketHub(address)",
          "createPointsProgram(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PointsFactory",
            "src": "contracts\\PointsFactory.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            },
            {
              "label": "isPointsProgram",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PointsFactory",
              "src": "contracts\\PointsFactory.sol:12"
            },
            {
              "label": "isRecipeMarketHub",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PointsFactory",
              "src": "contracts\\PointsFactory.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/WeirollWallet.sol:WeirollWallet": {
        "src": "contracts\\WeirollWallet.sol:13",
        "version": {
          "withMetadata": "5074997779f076b164cb56dde343f73c9ce8f2bf48a931582218a5f2588f9208",
          "withoutMetadata": "2c3e1d6a5c7796c94544f427a1fb5b3baad9c85e283eb3703170a218e9ece0d5",
          "linkedWithoutMetadata": "2c3e1d6a5c7796c94544f427a1fb5b3baad9c85e283eb3703170a218e9ece0d5"
        },
        "inherit": [
          "weiroll/contracts/VM.sol:VM",
          "clones-with-immutable-args/Clone.sol:Clone",
          "contracts/interfaces/IERC1271.sol:IERC1271"
        ],
        "libraries": [
          "solady/src/utils/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "()",
          "forfeit()",
          "owner()",
          "recipeMarketHub()",
          "amount()",
          "lockedUntil()",
          "isForfeitable()",
          "marketHash()",
          "executeWeiroll(bytes32[],bytes[])",
          "manualExecuteWeiroll(bytes32[],bytes[])",
          "execute(address,uint256,bytes)",
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          },
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "executed",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "WeirollWallet",
              "src": "contracts\\WeirollWallet.sol:57"
            },
            {
              "label": "forfeited",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "WeirollWallet",
              "src": "contracts\\WeirollWallet.sol:59"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/base/RecipeMarketHubBase.sol:RecipeMarketHubBase": {
        "src": "contracts\\base\\RecipeMarketHubBase.sol:18",
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient",
          "solmate/src/auth/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "setOffersPaused(bool)",
          "setProtocolFeeClaimant(address)",
          "setProtocolFee(uint256)",
          "setMinimumFrontendFee(uint256)",
          "getMarketHash((uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8))",
          "getAPOfferHash((uint256,bytes32,address,address,uint256,uint256,address[],uint256[]))",
          "getIPOfferHash(uint256,bytes32,address,uint256,uint256,address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "WEIROLL_WALLET_IMPLEMENTATION",
            "src": "contracts\\base\\RecipeMarketHubBase.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "POINTS_FACTORY",
            "src": "contracts\\base\\RecipeMarketHubBase.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            },
            {
              "label": "numAPOffers",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:32"
            },
            {
              "label": "numIPOffers",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:34"
            },
            {
              "label": "numMarkets",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:36"
            },
            {
              "label": "offersPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:39"
            },
            {
              "label": "protocolFee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:42"
            },
            {
              "label": "protocolFeeClaimant",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:43"
            },
            {
              "label": "minimumFrontendFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:46"
            },
            {
              "label": "marketHashToWeirollMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_struct(WeirollMarket)1849_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:49"
            },
            {
              "label": "offerHashToIPOffer",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(IPOffer)1878_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:52"
            },
            {
              "label": "offerHashToRemainingQuantity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:54"
            },
            {
              "label": "weirollWalletToLockedIncentivesParams",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(LockedRewardParams)1916_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:57"
            },
            {
              "label": "feeClaimantToTokenToAmount",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ERC20)2960": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_enum(RewardStyle)1754": {
              "label": "enum RewardStyle",
              "members": [
                "Upfront",
                "Arrear",
                "Forfeitable"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockedRewardParams)1916_storage)": {
              "label": "mapping(address => struct RecipeMarketHubBase.LockedRewardParams)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(IPOffer)1878_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.IPOffer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(WeirollMarket)1849_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.WeirollMarket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(IPOffer)1878_storage": {
              "label": "struct RecipeMarketHubBase.IPOffer",
              "members": [
                {
                  "label": "offerID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "targetMarketHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "remainingQuantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "incentivesOffered",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "incentiveAmountsOffered",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "incentiveToProtocolFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "incentiveToFrontendFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(LockedRewardParams)1916_storage": {
              "label": "struct RecipeMarketHubBase.LockedRewardParams",
              "members": [
                {
                  "label": "incentives",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amounts",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFeeRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wasIPOffer",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "offerHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "protocolFeeAtFill",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Recipe)1829_storage": {
              "label": "struct RecipeMarketHubBase.Recipe",
              "members": [
                {
                  "label": "weirollCommands",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weirollState",
                  "type": "t_array(t_bytes_storage)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(WeirollMarket)1849_storage": {
              "label": "struct RecipeMarketHubBase.WeirollMarket",
              "members": [
                {
                  "label": "marketID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "inputToken",
                  "type": "t_contract(ERC20)2960",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lockupTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositRecipe",
                  "type": "t_struct(Recipe)1829_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawRecipe",
                  "type": "t_struct(Recipe)1829_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "rewardStyle",
                  "type": "t_enum(RewardStyle)1754",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "contracts\\interfaces\\IERC1271.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solady/src/utils/ECDSA.sol:ECDSA": {
        "src": "solady\\src\\utils\\ECDSA.sol:26",
        "version": {
          "withMetadata": "f45e216fe5e4954aae2c2430ec850b932c83e01348e4a8ec0d52182caf2d6926",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/auth/Owned.sol:Owned": {
        "src": "solmate\\src\\auth\\Owned.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "solmate\\src\\auth\\Owned.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/tokens/ERC20.sol:ERC20": {
        "src": "solmate\\src\\tokens\\ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate\\src\\tokens\\ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate\\src\\tokens\\ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate\\src\\tokens\\ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate\\src\\tokens\\ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/tokens/ERC4626.sol:ERC4626": {
        "src": "solmate\\src\\tokens\\ERC4626.sol:10",
        "inherit": [
          "solmate/src/tokens/ERC20.sol:ERC20"
        ],
        "libraries": [
          "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib",
          "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib"
        ],
        "methods": [
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "previewDeposit(uint256)",
          "previewMint(uint256)",
          "previewWithdraw(uint256)",
          "previewRedeem(uint256)",
          "maxDeposit(address)",
          "maxMint(address)",
          "maxWithdraw(address)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC4626",
            "src": "solmate\\src\\tokens\\ERC4626.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "asset",
            "src": "solmate\\src\\tokens\\ERC4626.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib": {
        "src": "solmate\\src\\utils\\FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "e7adcd0f441c9817b5239fbe7c983301bd41ee03422d13d0218cbb932cf9ddde",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "solmate\\src\\utils\\SafeTransferLib.sol:9",
        "version": {
          "withMetadata": "bdb6bf9b4f628a799e5652d2907ebe3438fc4bac46b0a81658745906fcc4b349",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "weiroll/contracts/CommandBuilder.sol:CommandBuilder": {
        "src": "weiroll\\contracts\\CommandBuilder.sol:10",
        "version": {
          "withMetadata": "ed82d647af2d71050abf01b0416a46545b61c978c5a57a40d153dfadff3911a8",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "weiroll/contracts/VM.sol:VM": {
        "src": "weiroll\\contracts\\VM.sol:18",
        "inherit": [],
        "libraries": [
          "weiroll/contracts/CommandBuilder.sol:CommandBuilder"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VM",
            "src": "weiroll\\contracts\\VM.sol:29"
          },
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "self",
            "src": "weiroll\\contracts\\VM.sol:21"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step": {
        "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:25",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "pendingOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)78_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuardTransient.sol:15",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/TransientSlot.sol:TransientSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/TransientSlot.sol:TransientSlot": {
        "src": "@openzeppelin\\contracts\\utils\\TransientSlot.sol:33",
        "version": {
          "withMetadata": "5404e4ac8160ac6781eae57bd16a21644048c8f23eedd705eca9b615a2fd0cae",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "clones-with-immutable-args/Clone.sol:Clone": {
        "src": "clones-with-immutable-args\\Clone.sol:7",
        "version": {
          "withMetadata": "11bf80c2ccb45295efb97e5ab6dcf2050482b62c1198efd54c968334bf605d4a",
          "withoutMetadata": "318af2b9f79fb1a26a43fe08388396089aafa6fc13628f4892a0d3f8270a6c4b",
          "linkedWithoutMetadata": "318af2b9f79fb1a26a43fe08388396089aafa6fc13628f4892a0d3f8270a6c4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/Points.sol:Points": {
        "src": "contracts\\Points.sol:9",
        "version": {
          "withMetadata": "4538862830a389296032578a5845b15b6555dba7b5c8bd61d45367c6e4eaf013",
          "withoutMetadata": "23448885161ad3a2dd7be6d3165d04ff77f29f46c763339ebd0e669785a150e5",
          "linkedWithoutMetadata": "23448885161ad3a2dd7be6d3165d04ff77f29f46c763339ebd0e669785a150e5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)",
          "addAllowedVault(address)",
          "addAllowedIP(address)",
          "award(address,uint256)",
          "award(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Points",
            "src": "contracts\\Points.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pointsFactory",
            "src": "contracts\\Points.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            },
            {
              "label": "isAllowedVault",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Points",
              "src": "contracts\\Points.sol:37"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Points",
              "src": "contracts\\Points.sol:43"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Points",
              "src": "contracts\\Points.sol:45"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Points",
              "src": "contracts\\Points.sol:47"
            },
            {
              "label": "allowedIPs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Points",
              "src": "contracts\\Points.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/PointsFactory.sol:PointsFactory": {
        "src": "contracts\\PointsFactory.sol:10",
        "version": {
          "withMetadata": "81286be18d667bd2e7ec133e8d6e19b8c8d87b183b7f2614ba8b299777ec9935",
          "withoutMetadata": "fed2ee0410a67e587a40edbd4e7634a8edcd7e4b6c75f0d47bcbc749b972095f",
          "linkedWithoutMetadata": "fed2ee0410a67e587a40edbd4e7634a8edcd7e4b6c75f0d47bcbc749b972095f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addRecipeMarketHub(address)",
          "createPointsProgram(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PointsFactory",
            "src": "contracts\\PointsFactory.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable2Step",
              "src": "@openzeppelin\\contracts\\access\\Ownable2Step.sol:26"
            },
            {
              "label": "isPointsProgram",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PointsFactory",
              "src": "contracts\\PointsFactory.sol:12"
            },
            {
              "label": "isRecipeMarketHub",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PointsFactory",
              "src": "contracts\\PointsFactory.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/WeirollWallet.sol:WeirollWallet": {
        "src": "contracts\\WeirollWallet.sol:13",
        "version": {
          "withMetadata": "5074997779f076b164cb56dde343f73c9ce8f2bf48a931582218a5f2588f9208",
          "withoutMetadata": "2c3e1d6a5c7796c94544f427a1fb5b3baad9c85e283eb3703170a218e9ece0d5",
          "linkedWithoutMetadata": "2c3e1d6a5c7796c94544f427a1fb5b3baad9c85e283eb3703170a218e9ece0d5"
        },
        "inherit": [
          "weiroll/contracts/VM.sol:VM",
          "clones-with-immutable-args/Clone.sol:Clone",
          "contracts/interfaces/IERC1271.sol:IERC1271"
        ],
        "libraries": [
          "solady/src/utils/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "()",
          "()",
          "forfeit()",
          "owner()",
          "recipeMarketHub()",
          "amount()",
          "lockedUntil()",
          "isForfeitable()",
          "marketHash()",
          "executeWeiroll(bytes32[],bytes[])",
          "manualExecuteWeiroll(bytes32[],bytes[])",
          "execute(address,uint256,bytes)",
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          },
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "executed",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "WeirollWallet",
              "src": "contracts\\WeirollWallet.sol:57"
            },
            {
              "label": "forfeited",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "WeirollWallet",
              "src": "contracts\\WeirollWallet.sol:59"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/base/RecipeMarketHubBase.sol:RecipeMarketHubBase": {
        "src": "contracts\\base\\RecipeMarketHubBase.sol:18",
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuardTransient.sol:ReentrancyGuardTransient",
          "solmate/src/auth/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "setOffersPaused(bool)",
          "setProtocolFeeClaimant(address)",
          "setProtocolFee(uint256)",
          "setMinimumFrontendFee(uint256)",
          "getMarketHash((uint256,address,uint256,uint256,(bytes32[],bytes[]),(bytes32[],bytes[]),uint8))",
          "getAPOfferHash((uint256,bytes32,address,address,uint256,uint256,address[],uint256[]))",
          "getIPOfferHash(uint256,bytes32,address,uint256,uint256,address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-immutable",
            "name": "WEIROLL_WALLET_IMPLEMENTATION",
            "src": "contracts\\base\\RecipeMarketHubBase.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "POINTS_FACTORY",
            "src": "contracts\\base\\RecipeMarketHubBase.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            },
            {
              "label": "numAPOffers",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:32"
            },
            {
              "label": "numIPOffers",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:34"
            },
            {
              "label": "numMarkets",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:36"
            },
            {
              "label": "offersPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:39"
            },
            {
              "label": "protocolFee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:42"
            },
            {
              "label": "protocolFeeClaimant",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:43"
            },
            {
              "label": "minimumFrontendFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:46"
            },
            {
              "label": "marketHashToWeirollMarket",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_struct(WeirollMarket)1697_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:49"
            },
            {
              "label": "offerHashToIPOffer",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_struct(IPOffer)1726_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:52"
            },
            {
              "label": "offerHashToRemainingQuantity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:54"
            },
            {
              "label": "weirollWalletToLockedIncentivesParams",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(LockedRewardParams)1764_storage)",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:57"
            },
            {
              "label": "feeClaimantToTokenToAmount",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RecipeMarketHubBase",
              "src": "contracts\\base\\RecipeMarketHubBase.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ERC20)3607": {
              "label": "contract ERC20",
              "numberOfBytes": "20"
            },
            "t_enum(RewardStyle)1602": {
              "label": "enum RewardStyle",
              "members": [
                "Upfront",
                "Arrear",
                "Forfeitable"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(LockedRewardParams)1764_storage)": {
              "label": "mapping(address => struct RecipeMarketHubBase.LockedRewardParams)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(IPOffer)1726_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.IPOffer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(WeirollMarket)1697_storage)": {
              "label": "mapping(bytes32 => struct RecipeMarketHubBase.WeirollMarket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(IPOffer)1726_storage": {
              "label": "struct RecipeMarketHubBase.IPOffer",
              "members": [
                {
                  "label": "offerID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "targetMarketHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expiry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "remainingQuantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "incentivesOffered",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "incentiveAmountsOffered",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "incentiveToProtocolFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "incentiveToFrontendFeeAmount",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(LockedRewardParams)1764_storage": {
              "label": "struct RecipeMarketHubBase.LockedRewardParams",
              "members": [
                {
                  "label": "incentives",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amounts",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ip",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFeeRecipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wasIPOffer",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "offerHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "protocolFeeAtFill",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Recipe)1677_storage": {
              "label": "struct RecipeMarketHubBase.Recipe",
              "members": [
                {
                  "label": "weirollCommands",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "weirollState",
                  "type": "t_array(t_bytes_storage)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(WeirollMarket)1697_storage": {
              "label": "struct RecipeMarketHubBase.WeirollMarket",
              "members": [
                {
                  "label": "marketID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "inputToken",
                  "type": "t_contract(ERC20)3607",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lockupTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "frontendFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositRecipe",
                  "type": "t_struct(Recipe)1677_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "withdrawRecipe",
                  "type": "t_struct(Recipe)1677_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "rewardStyle",
                  "type": "t_enum(RewardStyle)1602",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "contracts\\interfaces\\IERC1271.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/interfaces/IERC20.sol:IERC20": {
        "src": "contracts\\interfaces\\IERC20.sol:2",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/interfaces/IWrappedVault.sol:IWrappedVault": {
        "src": "contracts\\interfaces\\IWrappedVault.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "asset()",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "maxDeposit(address)",
          "previewDeposit(uint256)",
          "deposit(uint256,address)",
          "maxMint(address)",
          "previewMint(uint256)",
          "mint(uint256,address)",
          "maxWithdraw(address)",
          "previewWithdraw(uint256)",
          "withdraw(uint256,address,address)",
          "maxRedeem(address)",
          "previewRedeem(uint256)",
          "redeem(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/libraries/SafeCast.sol:SafeCast": {
        "src": "contracts\\libraries\\SafeCast.sol:6",
        "version": {
          "withMetadata": "02b1a9c0bc48fa082f92c3f1bbf8c4d47a5778bda5713b99137cb363c1c7a0c3",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/periphery/InitializableERC20.sol:InitializableERC20": {
        "src": "contracts\\periphery\\InitializableERC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:23"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:25"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:27"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:33"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:35"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:37"
            },
            {
              "label": "INITIAL_CHAIN_ID",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:43"
            },
            {
              "label": "INITIAL_DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "7",
              "type": "t_bytes32",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:45"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "InitializableERC20",
              "src": "contracts\\periphery\\InitializableERC20.sol:47"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)78_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "solady/src/utils/ECDSA.sol:ECDSA": {
        "src": "solady\\src\\utils\\ECDSA.sol:26",
        "version": {
          "withMetadata": "f45e216fe5e4954aae2c2430ec850b932c83e01348e4a8ec0d52182caf2d6926",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/auth/Owned.sol:Owned": {
        "src": "solmate\\src\\auth\\Owned.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "solmate\\src\\auth\\Owned.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate\\src\\auth\\Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "solmate/src/tokens/ERC20.sol:ERC20": {
        "src": "solmate\\src\\tokens\\ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate\\src\\tokens\\ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate\\src\\tokens\\ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate\\src\\tokens\\ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate\\src\\tokens\\ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate\\src\\tokens\\ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "weiroll/contracts/CommandBuilder.sol:CommandBuilder": {
        "src": "weiroll\\contracts\\CommandBuilder.sol:10",
        "version": {
          "withMetadata": "ed82d647af2d71050abf01b0416a46545b61c978c5a57a40d153dfadff3911a8",
          "withoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e",
          "linkedWithoutMetadata": "f4823f35a92ab0439542746f824f49059cc793eb61f92a20ce9eff8d131a8d0e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "weiroll/contracts/VM.sol:VM": {
        "src": "weiroll\\contracts\\VM.sol:18",
        "inherit": [],
        "libraries": [
          "weiroll/contracts/CommandBuilder.sol:CommandBuilder"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VM",
            "src": "weiroll\\contracts\\VM.sol:29"
          },
          {
            "kind": "delegatecall",
            "src": "weiroll\\contracts\\VM.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "self",
            "src": "weiroll\\contracts\\VM.sol:21"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "contracts/eip-1167/ImplementationContract.sol:ImplementationContract": {
        "src": "contracts\\eip-1167\\ImplementationContract.sol:4",
        "version": {
          "withMetadata": "aaad29e4b6de95e9c799f8cead1f322057b5b2ae894d545c0a1423e90bdd0b4e",
          "withoutMetadata": "016144850676ae68f301b3167e5c2bbfe0701d9b347ae3f5d9e25ffe7ab21c9e",
          "linkedWithoutMetadata": "016144850676ae68f301b3167e5c2bbfe0701d9b347ae3f5d9e25ffe7ab21c9e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializer()",
          "getCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "isInitialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ImplementationContract",
              "src": "contracts\\eip-1167\\ImplementationContract.sol:5"
            },
            {
              "label": "count",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ImplementationContract",
              "src": "contracts\\eip-1167\\ImplementationContract.sol:6"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/eip-1167/MinimalProxyFactory.sol:MinimalProxyFactory": {
        "src": "contracts\\eip-1167\\MinimalProxyFactory.sol:5",
        "version": {
          "withMetadata": "8a892c27e43bcd91a0410c8abc331e6936f86b548fc38276bb2770e3a617bf67",
          "withoutMetadata": "1f2c8a09e6c0056972ce31ac4ce1d4a15687f8ada733d2fedee7c4c5432c0d13",
          "linkedWithoutMetadata": "1f2c8a09e6c0056972ce31ac4ce1d4a15687f8ada733d2fedee7c4c5432c0d13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deployClone(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "proxies",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MinimalProxyFactory",
              "src": "contracts\\eip-1167\\MinimalProxyFactory.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "contracts/eip-1167/ImplementationContract.sol:ImplementationContract": {
        "src": "contracts\\eip-1167\\ImplementationContract.sol:4",
        "version": {
          "withMetadata": "3c75d5727fc02d48c4a78447967694493151d149299203b56750d141e148182b",
          "withoutMetadata": "5f28a5e62197aa741918ffd346f6de1b035b65a50bebacfd47ef468b94c48d63",
          "linkedWithoutMetadata": "5f28a5e62197aa741918ffd346f6de1b035b65a50bebacfd47ef468b94c48d63"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "isInitialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ImplementationContract",
              "src": "contracts\\eip-1167\\ImplementationContract.sol:5"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/eip-1167/MinimalProxyFactory.sol:MinimalProxyFactory": {
        "src": "contracts\\eip-1167\\MinimalProxyFactory.sol:5",
        "version": {
          "withMetadata": "6e869d727751b0ed31646584d33116cc8ab335a2255094208ecb23780e3fc7ab",
          "withoutMetadata": "1f2c8a09e6c0056972ce31ac4ce1d4a15687f8ada733d2fedee7c4c5432c0d13",
          "linkedWithoutMetadata": "1f2c8a09e6c0056972ce31ac4ce1d4a15687f8ada733d2fedee7c4c5432c0d13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deployClone(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "proxies",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MinimalProxyFactory",
              "src": "contracts\\eip-1167\\MinimalProxyFactory.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:5",
        "version": {
          "withMetadata": "a20fe45ce52078837568498de36ec9d0869baf6a06bc8db20b4cc19d8ef80585",
          "withoutMetadata": "d6e8ef93848a5fd12194a5692fe0064b768c07c5f203b90412168380c0dc284f",
          "linkedWithoutMetadata": "d6e8ef93848a5fd12194a5692fe0064b768c07c5f203b90412168380c0dc284f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/eip-1167/ImplementationContract.sol:ImplementationContract": {
        "src": "contracts\\eip-1167\\ImplementationContract.sol:4",
        "version": {
          "withMetadata": "151eb5cda57e579a9131d180f8fc0f5fe45da3c778a6f7003d37ad38c375d94f",
          "withoutMetadata": "728d7ab09d49113706805e59b4421d7af411f349bb199ac8ce2bd1a10ea07c69",
          "linkedWithoutMetadata": "728d7ab09d49113706805e59b4421d7af411f349bb199ac8ce2bd1a10ea07c69"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initializer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "isInitialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "ImplementationContract",
              "src": "contracts\\eip-1167\\ImplementationContract.sol:5"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/eip-1167/MinimalProxyFactory.sol:MinimalProxyFactory": {
        "src": "contracts\\eip-1167\\MinimalProxyFactory.sol:5",
        "version": {
          "withMetadata": "f8d7b27e86cc222eb40b620346c96017518a21157d511b8c7fb2e4ce8d4e1c9c",
          "withoutMetadata": "1f2c8a09e6c0056972ce31ac4ce1d4a15687f8ada733d2fedee7c4c5432c0d13",
          "linkedWithoutMetadata": "1f2c8a09e6c0056972ce31ac4ce1d4a15687f8ada733d2fedee7c4c5432c0d13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deployClone(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "proxies",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MinimalProxyFactory",
              "src": "contracts\\eip-1167\\MinimalProxyFactory.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "e837399d8869bd26780127c97ee5c0cc40661725a4fc34d09813093a171a319a",
          "withoutMetadata": "d6e8ef93848a5fd12194a5692fe0064b768c07c5f203b90412168380c0dc284f",
          "linkedWithoutMetadata": "d6e8ef93848a5fd12194a5692fe0064b768c07c5f203b90412168380c0dc284f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "contracts/Token.sol:Token": {
        "src": "contracts\\Token.sol:9",
        "version": {
          "withMetadata": "e5152eac7d465908110334b396580b581ed84b47d1bbc5b887a2cd24ea4c5034",
          "withoutMetadata": "6e98ad722b65709e9f422784d810be214d229b8eeac927882777c605c3136c29",
          "linkedWithoutMetadata": "6e98ad722b65709e9f422784d810be214d229b8eeac927882777c605c3136c29"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts\\Token.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\Token.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\Token.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalSupply",
            "src": "contracts\\Token.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts\\Token.sol:11"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts\\Token.sol:12"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts\\Token.sol:15"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts\\Token.sol:18"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts\\Token.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    }
  ]
}